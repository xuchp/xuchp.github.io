import{_ as s,c as i,o as a,a7 as e}from"./chunks/framework.BvW0rtPM.js";const g=JSON.parse('{"title":"29. 说说你对双向绑定的理解，以及它的实现原理","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/29.说说你对双向绑定的理解，以及它的实现原理.md","filePath":"InterviewVue/29.说说你对双向绑定的理解，以及它的实现原理.md"}'),n={name:"InterviewVue/29.说说你对双向绑定的理解，以及它的实现原理.md"},t=e(`<h1 id="_29-说说你对双向绑定的理解-以及它的实现原理" tabindex="-1">29. 说说你对双向绑定的理解，以及它的实现原理 <a class="header-anchor" href="#_29-说说你对双向绑定的理解-以及它的实现原理" aria-label="Permalink to &quot;29. 说说你对双向绑定的理解，以及它的实现原理&quot;">​</a></h1><h3 id="_1-1-双向绑定的概念" tabindex="-1">1.1 双向绑定的概念 <a class="header-anchor" href="#_1-1-双向绑定的概念" aria-label="Permalink to &quot;1.1 双向绑定的概念&quot;">​</a></h3><p>vue 中双向绑定靠的是指令 v-model，可以绑定一个动态值到视图上，同时修改视图能改变数据对应的值(能修改的视图就是表单组件) 经常会听到一句话：v-model 是 value 和 input 的语法糖</p><h3 id="_1-2-表单元素的-v-model" tabindex="-1">1.2 表单元素的 v-model <a class="header-anchor" href="#_1-2-表单元素的-v-model" aria-label="Permalink to &quot;1.2 表单元素的 v-model&quot;">​</a></h3><p>内部会根据标签的不同解析出不同的语法。并且这里有&quot;额外&quot;的处理逻辑</p><ul><li>例如 文本框会被解析成 value + input 事件，会解决中文输入问题</li><li>例如 复选框会被解析成 checked + change 事件</li><li>……</li></ul><h3 id="_1-3-组件中的-v-model" tabindex="-1">1.3 组件中的 v-model <a class="header-anchor" href="#_1-3-组件中的-v-model" aria-label="Permalink to &quot;1.3 组件中的 v-model&quot;">​</a></h3><p>组件上的<code>v-model</code>默认会利用名为 <code>value</code>的 prop 和名为<code>input</code>的事件。对于组件而言，v-model 就是value + input 的语法糖。可用于组件中的数据的双向绑定。</p><p>名字也可以修改为</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Vue.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;base-checkbox&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    model: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        prop: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;checked&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        event: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;change&#39;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    props: {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        checked: Boolean,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    template: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &lt;input</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            type=&quot;checkbox&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            v-bind:checked=&quot;checked&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            v-on:change=&quot;$emit(&#39;change&#39;,$event.target.checked)&quot;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &gt;</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    \`</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre></div><blockquote><p>那组件中如果有多个数据想要做双向数据绑定怎么办？很遗憾在 Vue2 中不支持使用多个 v-model 的。vue3 中可以通过以下方法进行绑定。</p></blockquote><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">my</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model:a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;a&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model:b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> v-model:c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;c&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#B31D28;--shiki-dark:#FDAEB7;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">my</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,12),l=[t];function h(p,k,d,o,c,E){return a(),i("div",null,l)}const u=s(n,[["render",h]]);export{g as __pageData,u as default};
