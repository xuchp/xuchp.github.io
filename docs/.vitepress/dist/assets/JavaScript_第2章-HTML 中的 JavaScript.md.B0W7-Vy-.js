import{_ as t,c as o,o as c,a7 as e}from"./chunks/framework.BvW0rtPM.js";const q=JSON.parse('{"title":"HTML 中的 JavaScript","description":"","frontmatter":{},"headers":[],"relativePath":"JavaScript/第2章-HTML 中的 JavaScript.md","filePath":"JavaScript/第2章-HTML 中的 JavaScript.md"}'),a={name:"JavaScript/第2章-HTML 中的 JavaScript.md"},i=e('<h1 id="html-中的-javascript" tabindex="-1">HTML 中的 JavaScript <a class="header-anchor" href="#html-中的-javascript" aria-label="Permalink to &quot;HTML 中的 JavaScript&quot;">​</a></h1><h3 id="script-元素" tabindex="-1">&lt;Script&gt; 元素 <a class="header-anchor" href="#script-元素" aria-label="Permalink to &quot;\\&lt;Script\\&gt; 元素&quot;">​</a></h3><p>script 元素有下列 8 个属性</p><ol><li>async：可选。表示应该立即开始下载脚本，但不能阻止其他页面动作，比如下载资源或等待其他脚本加载。只对外部脚本文件有效</li><li>charset：可选。使用 src 属性指定的代码字符集，这个属性很少使用，因为大多数浏览器不在乎它的值。</li><li>crossorigin：可选。配置相关请求的 CROS（跨域资源共享）设置。默认不适用 CROS。<code>crossorigin=&quot;annoymous&quot;</code>配置文件请求不必设置凭据标志。<code>crossorigin=&quot;use-credentials&quot;</code>设置凭据标志，意味着出站请求会包含凭据。</li><li>defer：可选。表示脚本可以延迟到文档完全被解析和显示之后再执行。只对外部脚本文件有效。在 IE7 及更早版本中，对行内脚本也可以指定这个属性。</li><li>integrity：可选。允许比对接收到的资源和指定的加密签名已验证子资源完整性（<code>SRI，Subresource Integrity</code>）。如果接收到的资源的签名与这个属性指定的签名不匹配，则页面会报错，脚本不会执行。这个属性可以用于确保内容分发网络（<code>CDN，Content Delivery Network</code>）不会提供恶意内容。</li><li>language：废弃。最初用于表示代码块中的脚本语言（如<code>&quot;JavaScript&quot;</code>、<code>&quot;JavaScript1.2&quot;</code>或<code>&quot;VBScript&quot;</code>），大多数浏览器都会忽略这个值，不应该再使用它。</li><li>src：可选。表示包含要指向的代码的外部文件。</li><li>type：可选。代替 <code>language</code>，表示代码中脚本语言的内容类型（也成 MIME 类型）。按照惯例，这个值始终都是<code>&quot;text/javascript&quot;</code>，尽管 <code>&quot;text/javascript&quot;</code> 和 <code>&quot;text/ecmascript&quot;</code> 都已经废弃了。JavaScript 文件的 MIME 类型通常是 <code>&quot;application/x-javascript&quot;</code>，不过给 type 属性这个值有可能导致脚本被忽略。在非 IE 浏览器中有效的其他值还有 <code>&quot;application/javascript&quot;</code> 和<code>&quot;application/ecmascript&quot;</code>。如果这个值是 <code>module</code>，则代码会被当成 ES6 模块，而且只有这时候代码中才能出现 <code>import</code> 和 <code>export</code> 关键字</li></ol><p>使用了 <code>src</code>属性的&lt;script&gt;元素不应该再在&lt;script&gt;和&lt;/script&gt;标签中包含其他 JavaScript 代码。如果两者都提供的话，则浏览器只会下载并执行脚本文件，从而忽略行内代码。</p>',5),r=[i];function d(p,s,l,n,u,_){return c(),o("div",null,r)}const v=t(a,[["render",d]]);export{q as __pageData,v as default};
