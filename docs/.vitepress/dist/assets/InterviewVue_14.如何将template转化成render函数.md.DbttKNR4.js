import{_ as e,c as t,o as r,a7 as a}from"./chunks/framework.BvW0rtPM.js";const f=JSON.parse('{"title":"如何将 template 转化成 render 函数","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/14.如何将template转化成render函数.md","filePath":"InterviewVue/14.如何将template转化成render函数.md"}'),o={name:"InterviewVue/14.如何将template转化成render函数.md"},_=a('<h1 id="如何将-template-转化成-render-函数" tabindex="-1">如何将 template 转化成 render 函数 <a class="header-anchor" href="#如何将-template-转化成-render-函数" aria-label="Permalink to &quot;如何将 template 转化成 render 函数&quot;">​</a></h1><p>Vue 中含有模板编译的功能，它的主要作用是将用户编写的 template 编译为 js 中可执行的 render 函数</p><ol><li>将 template 模板转换成 ast 语法树- <code>parseHTML</code></li><li>将静态语法做静态标记- <code>markup``diff</code>来做优化 静态节点跳过 diff</li><li>重新生成代码 - <code>codeGen</code></li></ol><blockquote><p>Vue3中的模板转换，做了更多的优化操作，Vue2 仅仅是标记了静态节点而已</p></blockquote>',4),d=[_];function n(l,c,i,p,s,m){return r(),t("div",null,d)}const h=e(o,[["render",n]]);export{f as __pageData,h as default};
