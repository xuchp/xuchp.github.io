import{_ as e,c as a,o as t,a7 as r}from"./chunks/framework.DIkKG9z6.js";const f=JSON.parse('{"title":"8.Vue 中如何进行依赖收集","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/08.Vue 中如何进行依赖收集.md","filePath":"InterviewVue/08.Vue 中如何进行依赖收集.md"}'),c={name:"InterviewVue/08.Vue 中如何进行依赖收集.md"},o=r('<h1 id="_8-vue-中如何进行依赖收集" tabindex="-1">8.Vue 中如何进行依赖收集 <a class="header-anchor" href="#_8-vue-中如何进行依赖收集" aria-label="Permalink to &quot;8.Vue 中如何进行依赖收集&quot;">​</a></h1><h3 id="_1-1-依赖收集流程" tabindex="-1">1.1 依赖收集流程 <a class="header-anchor" href="#_1-1-依赖收集流程" aria-label="Permalink to &quot;1.1 依赖收集流程&quot;">​</a></h3><ul><li>每个属性都拥有自己的 <code>dep</code> 属性，存放它所依赖的 watcher，当属性变化后会通知自己对应的 watcher 去更新</li><li>默认在初始化时会调用 render 函数，此时会触发属性依赖收集 <code>dep.depend</code></li><li>当属性发生修改时会触发 <code>watcher 更新 dep.notify()</code></li></ul><p><img src="https://gitee.com/xuchp/typora-pics/raw/master/images/963d048b4ca4c99d4585d1cb736a589f-20240313171450431.png" alt="image.png"></p><h3 id="_1-2-vue3依赖收集" tabindex="-1">1.2 Vue3依赖收集 <a class="header-anchor" href="#_1-2-vue3依赖收集" aria-label="Permalink to &quot;1.2 Vue3依赖收集&quot;">​</a></h3><ul><li>Vue3 中会通过 <code>Map</code> 结构将属性和 effect 映射起来</li><li>默认在初始化时会调用 render 函数，此时会触发依赖收集 <code>track</code></li><li>当属性发生修改时会找对应的 effect 列表依次执行<code>trigger</code></li></ul>',6),i=[o];function _(d,l,n,u,s,h){return t(),a("div",null,i)}const m=e(c,[["render",_]]);export{f as __pageData,m as default};
