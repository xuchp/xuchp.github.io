import{_ as e,c as t,o as _,a7 as r}from"./chunks/framework.DIkKG9z6.js";const R=JSON.parse('{"title":"44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？.md","filePath":"InterviewVue/44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？.md"}'),o={name:"InterviewVue/44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？.md"},i=r('<h1 id="_44-vue-router-有几种钩子函数-具体是什么及执行流程是怎样的" tabindex="-1">44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？ <a class="header-anchor" href="#_44-vue-router-有几种钩子函数-具体是什么及执行流程是怎样的" aria-label="Permalink to &quot;44.Vue-Router 有几种钩子函数，具体是什么及执行流程是怎样的？&quot;">​</a></h1><ul><li>导航被触发</li><li>在失活的组件调用 beforeRouteLeave守卫</li><li>调用全局的 beforeEach 守卫</li><li>在重用的组件里调用 beforeRouteUpdate 守卫(2.2+)</li><li>在路由配置里调用 beforeEnter</li><li>解析异步路由组件</li><li>在被激活的组件里调用 beforeRouteEnter 守卫</li><li>调用全局的 beforeResolve 守卫(2.5+)</li><li>导航被确认</li><li>调用全局的 afterEach 钩子</li><li>触发 DOM 更新</li><li>调用 beforeRouteEnter 守卫中传给 next 的回调函数，创建好的组件实例会作为回调函数的参数传入</li></ul>',2),l=[i];function a(u,n,s,c,d,f){return _(),t("div",null,l)}const V=e(o,[["render",a]]);export{R as __pageData,V as default};
