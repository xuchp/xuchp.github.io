import{_ as e,c as a,o as r,a7 as t}from"./chunks/framework.DIkKG9z6.js";const v=JSON.parse('{"title":"解释 ref 和 reactive 区别？","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/12.解释 ref和reactive区别.md","filePath":"InterviewVue/12.解释 ref和reactive区别.md"}'),i={name:"InterviewVue/12.解释 ref和reactive区别.md"},c=t('<h1 id="解释-ref-和-reactive-区别" tabindex="-1">解释 ref 和 reactive 区别？ <a class="header-anchor" href="#解释-ref-和-reactive-区别" aria-label="Permalink to &quot;解释 ref 和 reactive 区别？&quot;">​</a></h1><h3 id="_1-1-基本概念" tabindex="-1">1.1 基本概念 <a class="header-anchor" href="#_1-1-基本概念" aria-label="Permalink to &quot;1.1 基本概念&quot;">​</a></h3><p>ref 和 reactive 是 Vue3 数据响应式中非常重要的两个概念</p><ul><li>reactive 用于处理对象类型的数据响应。底层采用的是 new Proxy()</li><li>ref 通常用于处理单值的响应式，ref 主要解决原始值的响应式问题。底层采用的是<code>Object.defineProperty</code>实现的</li></ul><h3 id="_1-2-源码实现" tabindex="-1">1.2 源码实现 <a class="header-anchor" href="#_1-2-源码实现" aria-label="Permalink to &quot;1.2 源码实现&quot;">​</a></h3>',5),_=[c];function o(n,l,s,d,f,h){return r(),a("div",null,_)}const p=e(i,[["render",o]]);export{v as __pageData,p as default};
