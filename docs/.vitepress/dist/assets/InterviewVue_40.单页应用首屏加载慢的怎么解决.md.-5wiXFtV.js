import{_ as e,c as _,o as t,a7 as i}from"./chunks/framework.DIkKG9z6.js";const m=JSON.parse('{"title":"40. 单页应用首屏加载速度慢的怎么解决？","description":"","frontmatter":{},"headers":[],"relativePath":"InterviewVue/40.单页应用首屏加载慢的怎么解决.md","filePath":"InterviewVue/40.单页应用首屏加载慢的怎么解决.md"}'),a={name:"InterviewVue/40.单页应用首屏加载慢的怎么解决.md"},o=i('<h1 id="_40-单页应用首屏加载速度慢的怎么解决" tabindex="-1">40. 单页应用首屏加载速度慢的怎么解决？ <a class="header-anchor" href="#_40-单页应用首屏加载速度慢的怎么解决" aria-label="Permalink to &quot;40. 单页应用首屏加载速度慢的怎么解决？&quot;">​</a></h1><ul><li>使用路由懒加载、异步组件，实现组件拆分，减少入口文件体积大小(优化体验骨架屏)</li><li>抽离公共代码，采用<code>splitChunks</code>进行代码分割。</li><li>组件加载采用按需加载的方式。</li><li>静态资源缓存，采用 HTTP 缓存(强制缓存、对比缓存)、采用 <code>localStorage</code> 实现缓存资源</li><li>图片资源的压缩，雪碧图、对小图片进行 base64 减少 http 请求</li><li>打包时开启<code>gzip</code>压缩处理<code>compression-webpack-plugin</code>插件</li><li>静态资源采用 CDN 提速。终极的手段</li><li>采用 SSR 对首屏做服务端渲染</li></ul>',2),l=[o];function c(r,s,n,d,p,u){return t(),_("div",null,l)}const f=e(a,[["render",c]]);export{m as __pageData,f as default};
